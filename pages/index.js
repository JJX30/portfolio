import Head from "next/head";
import Navbar from "../components/Navbar";
import styles from "../styles/Home.module.css";
import * as THREE from "three";
import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader.js";
import { useEffect, useRef } from "react";

function Home() {
  const mountRef = useRef(null);

  useEffect(() => {
    var scene = new THREE.Scene();

    const loader = new GLTFLoader();
    loader.load(
      "head.glb",
      function (gltf) {
        scene.add(gltf.scene);
      },
      // called while loading is progressing
      function (xhr) {
        console.log((xhr.loaded / xhr.total) * 100 + "% loaded");
      },
      // called when loading has errors
      function (error) {
        console.log("An error happened");
      }
    );
    // Shape
    // var geometry = new THREE.BoxGeometry(5, 5, 5);
    // var material = new THREE.MeshStandardMaterial({ color: 0x00ff00 });
    // var cube = new THREE.Mesh(geometry, material);
    // scene.add(cube);

    // Light
    const light = new THREE.PointLight(0xffffff, 1, 100);
    light.position.set(0, 0, 10);
    scene.add(light);

    // Camera
    var camera = new THREE.PerspectiveCamera(
      75,
      window.innerWidth / window.innerHeight,
      0.1,
      1000
    );
    camera.position.z = 10;
    scene.add(camera);

    // Render
    var renderer = new THREE.WebGLRenderer();
    renderer.setSize(window.innerWidth, window.innerHeight);
    mountRef.current.appendChild(renderer.domElement);

    // Loop
    var animate = function () {
      requestAnimationFrame(animate);
      // cube.rotation.y += -0.01;
      renderer.render(scene, camera);
    };

    // Resize functionality
    let onWindowResize = function () {
      camera.aspect = window.innerWidth / window.innerHeight;
      camera.updateProjectionMatrix();
      renderer.setSize(window.innerWidth, window.innerHeight);
    };

    window.addEventListener("resize", onWindowResize, false);

    animate();

    return () => mountRef.current.removeChild(renderer.domElement);
  }, []);

  return (
    <div>
      <Head>
        <title>Mauricio Del Castillo</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.main}>
        <div className={styles.mainDiv}>
          <Navbar></Navbar>
          <div className={styles.canvas} ref={mountRef}></div>
        </div>
      </div>
    </div>
  );
}

export default Home;
